<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.kpocha</groupId>
    <artifactId>fvstore</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging> <!-- El empaquetado del padre es 'pom' -->

    <name>fvstore-parent</name>
    <description>Proyecto padre para FVStore, agrupando los módulos Java.</description>

    <properties>
        <java.version>17</java.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>

        <!-- Versiones comunes de dependencias (pueden ser gestionadas aquí) -->
        <lombok.version>1.18.30</lombok.version>
        <junit.jupiter.version>5.10.0</junit.jupiter.version>
        <spring-boot.version>3.2.0</spring-boot.version>
    </properties>

    <modules>
        <module>fvstore-core</module>
        <module>fvstore-api</module>
        <module>fvstore-desktop</module>
        <!-- fvstore-web no se incluye aquí directamente como módulo Maven,
             ya que se gestiona con npm/yarn.
             Su integración en el build podría hacerse con maven-frontend-plugin si se desea.
        -->
    </modules>

    <dependencyManagement>
        <dependencies>
            <!-- Spring Boot (para fvstore-api) -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!-- Lombok (para todos los módulos Java) -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <scope>provided</scope>
            </dependency>

            <!-- JUnit 5 (para todos los módulos Java) -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit.jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit.jupiter.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- No longer needed to explicitly add surefire provider for JUnit 5 with modern Surefire versions -->
            <!--
            <dependency>
                <groupId>org.junit.platform</groupId>
                <artifactId>junit-platform-surefire-provider</artifactId>
                <version>1.3.2</version>
                <scope>test</scope>
            </dependency>
            -->
        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <!-- Plugin de compilación de Maven -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.11.0</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <annotationProcessorPaths>
                             <path>
                                <groupId>org.projectlombok</groupId>
                                <artifactId>lombok</artifactId>
                                <version>${lombok.version}</version>
                            </path>
                        </annotationProcessorPaths>
                    </configuration>
                </plugin>
                <!-- Plugin Surefire para ejecutar tests -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>3.2.2</version> <!-- Usar una versión reciente que soporte bien JUnit 5 -->
                </plugin>
                 <!-- Spring Boot Maven Plugin (configuración base que puede ser heredada) -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot.version}</version>
                     <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal> <!-- repackage es específico de la app, no del parent pom -->
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
        <!-- Plugins aplicados a todos los módulos (o al menos al padre si no se define en pluginManagement) -->
        <!-- Es mejor definir las versiones en pluginManagement y solo declarar el plugin aquí si es necesario para todos -->
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <!-- Configuración ya definida en pluginManagement -->
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                 <!-- Configuración ya definida en pluginManagement -->
            </plugin>
        </plugins>
    </build>

</project>
