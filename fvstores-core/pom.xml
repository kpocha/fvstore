<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.facilvirtual</groupId>
        <artifactId>fvstores-parent</artifactId>
        <version>1.0.0</version>
        <relativePath>../pom.xml</relativePath> <!-- Point to the parent POM in the root directory -->
    </parent>

    <artifactId>fvstores-core</artifactId>
    <packaging>jar</packaging>

    <name>FVStores Core</name>
    <description>Core logic and domain model for FVStores</description>

    <dependencies>
        <!-- Spring Boot Data JPA (managed by parent) -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <!-- Database pooling and driver (managed by parent) -->
        <dependency>
            <groupId>com.mchange</groupId>
            <artifactId>c3p0</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>runtime</scope>
        </dependency>
        <!-- HSQLDB for tests or specific profiles if needed (managed by parent) -->
        <!-- Note: Original fvstoresdesk had hsqldb as com.facilvirtual.lib:hsqldb-2.3.2,
             assuming we want the standard one now. If specific version from lib is needed, adjust GAV.
             For now, let's use a standard hsqldb if it's for testing, or omit if not immediately clear.
             The task says "hsqldb-2.3.2 (move to core)", so let's assume it IS needed.
             If this is a custom build, this dependency might need to be installed locally or in a repo.
             For now, I'll use the standard org.hsqldb:hsqldb.
        -->
        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <!-- Version managed by parent -->
            <!-- <scope>test</scope> Provide scope if it's only for testing -->
        </dependency>


        <!-- Apache POI for Excel (managed by parent) -->
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-ooxml</artifactId>
        </dependency>

        <!-- iText for PDF (managed by parent) -->
        <dependency>
            <groupId>com.itextpdf</groupId>
            <artifactId>itextpdf</artifactId>
        </dependency>

        <!-- SOAP libraries (managed by parent) -->
        <dependency>
            <groupId>javax.xml.soap</groupId>
            <artifactId>javax.xml.soap-api</artifactId>
        </dependency>
        <dependency>
            <groupId>javax.xml.rpc</groupId>
            <artifactId>javax.xml.rpc-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.axis</groupId>
            <artifactId>axis</artifactId>
        </dependency>
        <dependency> <!-- Required by Axis -->
            <groupId>commons-discovery</groupId>
            <artifactId>commons-discovery</artifactId>
            <version>0.5</version>
        </dependency>
        <dependency> <!-- Required by Axis -->
            <groupId>wsdl4j</groupId>
            <artifactId>wsdl4j</artifactId>
            <version>1.6.3</version>
        </dependency>


        <!-- Bouncy Castle for crypto (managed by parent) -->
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcmail-jdk16</artifactId>
        </dependency>

        <!-- Dom4J for XML (managed by parent) -->
        <dependency>
            <groupId>org.dom4j</groupId>
            <artifactId>dom4j</artifactId>
        </dependency>

        <!-- JSON (managed by parent) -->
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
        </dependency>

        <!-- Jackson for annotations like @JsonIgnoreProperties -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
        </dependency>

        <!-- Apache Commons (managed by parent) -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
        </dependency>

        <!-- Logging (managed by parent) -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>runtime</scope> <!-- Or compile, if core provides logging config -->
        </dependency>
         <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId> <!-- If migrating away, this could be removed -->
        </dependency>

        <!-- Test Dependencies -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- Ensure JUnit 5 engine is explicitly available for Surefire -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

</project>
